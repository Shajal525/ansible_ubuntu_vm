---
- name: Ensure Docker service is running
  service:
    name: docker
    state: started
    enabled: yes

- name: Create directories for Jellyfin
  file:
    path: "{{ item }}"
    state: directory
    owner: "www-data"
    group: "www-data"
    mode: "0755"
  loop:
    - "{{ jellyfin_config }}"
    - "{{ jellyfin_nginx_config }}"
    - "{{ tvseries_path }}"
    - "{{ movies_path }}"

- name: Create Nginx config file from template
  template:
    src: templates/jellyfin.nginx.conf.j2
    dest: "{{ jellyfin_nginx_config }}/nginx.conf"

- name: Deploy Jellyfin using Docker Compose
  docker_container:
    name: jellyfin
    image: lscr.io/linuxserver/jellyfin:latest
    hostname: jellyfin
    env:
      PUID: "1000"
      PGID: "1000"
      TZ: "GB"
      JELLYFIN_PublishedServerUrl: "https://192.168.0.4:{{ jellyfin_port }}" #optional
    volumes:
      - "{{ jellyfin_config }}:/config"
      - "{{ tvseries_path }}:/data/tvshows"
      - "{{ movies_path }}:/data/movies"
    ports:
      - "8096:8096"
      - "8920:8920" #optional
      - "7359:7359/udp" #optional
      - "1900:1900/udp" #optional
    labels:
      com.docker.compose.project: "media_stack"
      com.docker.compose.service: "jellyfin"
    restart_policy: unless-stopped
    state: started

- name: Wait for Jellyfin to be ready
  wait_for:
    port: 8096
    timeout: 15

- name: Start jellyfin_nginx container
  docker_container:
    name: jellyfin_nginx
    image: nginx:latest
    volumes:
      - "{{ jellyfin_nginx_config }}/nginx.conf:/etc/nginx/nginx.conf"
      - "{{ ssl_cert_dir }}/server.crt:/etc/nginx/ssl/server.crt"
      - "{{ ssl_cert_dir }}/server.key:/etc/nginx/ssl/server.key"
    ports:
      - "{{ jellyfin_port }}:443"
    labels:
      com.docker.compose.project: "media_stack"
      com.docker.compose.service: "jellyfin_nginx"
    restart_policy: unless-stopped
    state: started

- name: Jellyfin deployed
  debug:
    msg: "Jellyfin is running successfully"
