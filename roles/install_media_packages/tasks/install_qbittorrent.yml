- name: Ensure Docker service is running
  service:
    name: docker
    state: started
    enabled: yes

- name: Create directories for qBittorrent
  file:
    path: "{{ item }}"
    state: directory
    owner: "www-data"
    group: "www-data"
    mode: "0755"
  loop:
    - "{{ qbittorrent_config }}"
    - "{{ qbittorrent_nginx_config }}"
    - "{{ downloads_path }}"

- name: Create Nginx config file from template
  template:
    src: templates/qbittorrent.nginx.conf.j2
    dest: "{{ qbittorrent_nginx_config }}/nginx.conf"

- name: Deploy qBittorrent container
  docker_container:
    name: qbittorrent
    image: lscr.io/linuxserver/qbittorrent:latest
    env:
      PUID: "1000"
      PGID: "1000"
      TZ: "GB"
      WEBUI_PORT: "8080"
      TORRENTING_PORT: "6881"
    volumes:
      - "{{ qbittorrent_config }}:/config"
      - "{{ downloads_path }}:/downloads"
    ports:
      - 8080:8080
      - 6881:6881
      - 6881:6881/udp
    labels:
      com.docker.compose.project: "media_stack"
      com.docker.compose.service: "qbittorrent"
    restart_policy: unless-stopped
    state: started

- name: Wait for qBitTorrent to be ready
  wait_for:
    port: 8080
    timeout: 15

- name: Start qbittorrent_nginx container
  docker_container:
    name: qbittorrent_nginx
    image: nginx:latest
    volumes:
      - "{{ qbittorrent_nginx_config }}/nginx.conf:/etc/nginx/nginx.conf"
      - "{{ ssl_cert_dir }}/server.crt:/etc/nginx/ssl/server.crt"
      - "{{ ssl_cert_dir }}/server.key:/etc/nginx/ssl/server.key"
    ports:
      - "{{ qbittorrent_webui_port }}:443"
    labels:
      com.docker.compose.project: "media_stack"
      com.docker.compose.service: "qbittorrent_nginx"
    restart_policy: unless-stopped
    state: started

- name: qBittorrent deployed
  debug:
    msg: "qBittorrent is running successfully"
    
- name: Get log to see the password.
  shell: docker logs qbittorrent | grep "password"
  changed_when: false
  register: qbittorrent_log

- name: Print logs
  debug:
    var: qbittorrent_log.stdout
